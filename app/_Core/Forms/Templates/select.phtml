<?php
/**
 * Default Select Field Template
 * 
 * Template for rendering select/dropdown fields
 * 
 * Available variables:
 * @var \Core\Forms\Fields\SelectField $field The field instance
 * @var array $context Rendering context
 * @var array $options Rendering options
 */

// Get field data
$fieldName = $field->getName();
$fieldId = $field->getAttribute('id', $fieldName);
$fieldLabel = $field->getLabel();
$fieldHelp = $field->getHelpText();
$fieldValue = $field->getValue();
$isRequired = $field->isRequired();
$isMultiple = $field->isMultiple();

// Get options
$selectOptions = $field->getOptions();
$emptyOption = $field->getEmptyOption();

// Get errors
$errors = $context['errors'][$fieldName] ?? [];
if (!is_array($errors)) {
    $errors = [$errors];
}
$hasErrors = !empty($errors);

// Build attributes
$attributes = $field->getAttributes();
if ($hasErrors) {
    $classes = $attributes['class'] ?? '';
    $attributes['class'] = trim($classes . ' is-invalid');
}

if ($isMultiple) {
    $attributes['multiple'] = 'multiple';
    $attributes['name'] = $fieldName . '[]';
}

// Build attribute string
$attrString = '';
foreach ($attributes as $name => $value) {
    if (is_bool($value)) {
        $attrString .= $value ? ' ' . htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : '';
    } else {
        $attrString .= sprintf(
            ' %s="%s"',
            htmlspecialchars($name, ENT_QUOTES, 'UTF-8'),
            htmlspecialchars($value, ENT_QUOTES, 'UTF-8')
        );
    }
}

// Helper function to render options
$renderOptions = function($options, $selectedValue) use ($isMultiple) {
    $html = '';
    foreach ($options as $optKey => $optValue) {
        if (is_array($optValue)) {
            // Optgroup
            $html .= sprintf('<optgroup label="%s">', htmlspecialchars($optKey, ENT_QUOTES, 'UTF-8'));
            $html .= $renderOptions($optValue, $selectedValue);
            $html .= '</optgroup>';
        } else {
            // Regular option
            $isSelected = $isMultiple 
                ? (is_array($selectedValue) && in_array($optKey, $selectedValue, true))
                : ($optKey == $selectedValue);
            
            $html .= sprintf(
                '<option value="%s"%s>%s</option>',
                htmlspecialchars($optKey, ENT_QUOTES, 'UTF-8'),
                $isSelected ? ' selected' : '',
                htmlspecialchars($optValue, ENT_QUOTES, 'UTF-8')
            );
        }
    }
    return $html;
};
?>
<div class="form-field select-field<?= $hasErrors ? ' has-error' : '' ?>">
    <?php if ($fieldLabel): ?>
    <label for="<?= htmlspecialchars($fieldId, ENT_QUOTES, 'UTF-8') ?>" class="field-label">
        <?= htmlspecialchars($fieldLabel, ENT_QUOTES, 'UTF-8') ?>
        <?php if ($isRequired): ?>
        <span class="required-indicator" aria-label="required">*</span>
        <?php endif; ?>
    </label>
    <?php endif; ?>
    
    <select<?= $attrString ?>>
        <?php if ($emptyOption !== null && !$isMultiple): ?>
        <option value=""><?= htmlspecialchars($emptyOption, ENT_QUOTES, 'UTF-8') ?></option>
        <?php endif; ?>
        
        <?= $renderOptions($selectOptions, $fieldValue) ?>
    </select>
    
    <?php if ($fieldHelp): ?>
    <small class="field-help"><?= htmlspecialchars($fieldHelp, ENT_QUOTES, 'UTF-8') ?></small>
    <?php endif; ?>
    
    <?php if ($hasErrors): ?>
    <div class="field-errors">
        <?php foreach ($errors as $error): ?>
        <div class="field-error"><?= htmlspecialchars($error, ENT_QUOTES, 'UTF-8') ?></div>
        <?php endforeach; ?>
    </div>
    <?php endif; ?>
</div>
