/**
 * Kit Void - Geometric Components Styles
 */

/* ============================================
   ISOMETRIC COMMAND GRID
   ============================================ */
.kit-void-command-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    max-width: 800px;
    margin: 2rem auto;
    perspective: var(--perspective);
}

.kit-void-grid-cell {
    aspect-ratio: 1;
    border: 2px solid var(--void-cyan);
    background: rgba(0, 255, 240, 0.05);
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
    transform-style: preserve-3d;
}

.kit-void-grid-cell:hover {
    background: rgba(0, 255, 240, 0.15);
    box-shadow: 
        0 0 20px var(--void-cyan),
        inset 0 0 20px var(--void-cyan);
    transform: translateZ(20px);
}

.kit-void-grid-cell.is-active {
    border-color: var(--void-magenta);
    box-shadow: 
        0 0 30px var(--void-magenta),
        inset 0 0 30px var(--void-magenta);
}

/* ============================================
   WIREFRAME DATA CONTAINERS
   ============================================ */
.kit-void-data-container {
    position: relative;
    padding: 2rem;
    border: 2px solid var(--void-cyan);
    background: transparent;
    transform-style: preserve-3d;
}

.kit-void-data-container::before {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    border: 1px solid var(--void-cyan);
    opacity: 0.3;
    pointer-events: none;
}

.kit-void-data-container .vertices {
    position: absolute;
}

.kit-void-data-container .vertex-tl {
    top: -4px;
    left: -4px;
}

.kit-void-data-container .vertex-tr {
    top: -4px;
    right: -4px;
}

.kit-void-data-container .vertex-bl {
    bottom: -4px;
    left: -4px;
}

.kit-void-data-container .vertex-br {
    bottom: -4px;
    right: -4px;
}

/* ============================================
   MATRIX TIMELINE GRID
   ============================================ */
.kit-void-timeline {
    position: relative;
    height: 200px;
    overflow-x: auto;
    overflow-y: hidden;
    background: linear-gradient(180deg, transparent 0%, rgba(0, 255, 240, 0.05) 100%);
}

.kit-void-timeline-grid {
    position: relative;
    height: 100%;
    min-width: 2000px;
    background-image: 
        linear-gradient(var(--grid-color) 1px, transparent 1px),
        linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
    background-size: 50px 50px;
}

.kit-void-timeline-event {
    position: absolute;
    width: 12px;
    height: 12px;
    border: 2px solid var(--void-cyan);
    background: var(--void-black);
    transform: rotate(45deg);
    cursor: pointer;
    transition: all 0.3s ease;
}

.kit-void-timeline-event:hover {
    transform: rotate(45deg) scale(1.5);
    box-shadow: 0 0 20px var(--void-cyan);
}

.kit-void-timeline-event.event-task {
    border-color: var(--void-cyan);
}

.kit-void-timeline-event.event-meeting {
    border-color: var(--void-magenta);
    border-radius: 50%;
}

.kit-void-timeline-event.event-deadline {
    border-color: var(--void-yellow);
}

.kit-void-timeline-event.event-milestone {
    border-color: var(--void-green);
    clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
}

/* ============================================
   GEOMETRIC MODALS
   ============================================ */
.kit-void-modal {
    position: fixed;
    inset: 0;
    z-index: 10000;
    display: none;
    align-items: center;
    justify-content: center;
}

.kit-void-modal.is-visible {
    display: flex;
}

.kit-void-modal-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.9);
    animation: fade-in 0.3s ease;
}

.kit-void-modal-content {
    position: relative;
    z-index: 1;
    max-width: 600px;
    width: 90%;
    padding: 2rem;
    border: 2px solid var(--void-cyan);
    background: var(--void-black);
    animation: modal-assemble 0.8s ease-out;
}

@keyframes modal-assemble {
    0% {
        opacity: 0;
        transform: scale(0.5) rotateY(90deg);
    }
    50% {
        opacity: 0.5;
        transform: scale(1.1) rotateY(45deg);
    }
    100% {
        opacity: 1;
        transform: scale(1) rotateY(0deg);
    }
}

@keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* ============================================
   ALERT SYSTEM
   ============================================ */
.kit-void-alerts {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
    max-width: 400px;
}

.kit-void-alert {
    margin-bottom: 1rem;
    padding: 1rem;
    border: 2px solid var(--void-cyan);
    background: var(--void-black);
    position: relative;
    animation: alert-enter 0.6s ease-out;
}

.kit-void-alert::before,
.kit-void-alert::after {
    content: '';
    position: absolute;
    width: 6px;
    height: 6px;
    background: var(--void-cyan);
    box-shadow: 0 0 8px var(--void-cyan);
}

.kit-void-alert::before {
    top: -3px;
    left: -3px;
}

.kit-void-alert::after {
    bottom: -3px;
    right: -3px;
}

.kit-void-alert--info {
    border-color: var(--void-cyan);
}

.kit-void-alert--success {
    border-color: var(--void-green);
}

.kit-void-alert--warning {
    border-color: var(--void-yellow);
}

.kit-void-alert--critical {
    border-color: var(--void-red);
    animation: alert-enter 0.6s ease-out, alert-pulse 1s ease-in-out infinite 0.6s;
}

@keyframes alert-enter {
    from {
        opacity: 0;
        transform: translateX(100%) rotateY(90deg);
    }
    to {
        opacity: 1;
        transform: translateX(0) rotateY(0deg);
    }
}

@keyframes alert-pulse {
    0%, 100% {
        box-shadow: 0 0 10px currentColor;
    }
    50% {
        box-shadow: 0 0 30px currentColor;
    }
}

/* ============================================
   RESPONSIVE
   ============================================ */
@media (max-width: 767px) {
    .kit-void-command-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }
    
    .kit-void-timeline {
        height: 150px;
    }
}
